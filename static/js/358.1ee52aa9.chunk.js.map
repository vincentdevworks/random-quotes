{"version":3,"file":"static/js/358.1ee52aa9.chunk.js","mappings":"qOACA,EAA4B,6BAA5B,EAAqE,6BAArE,EAA2G,0BCA3G,EAA0B,yB,SCa1B,EAXgB,SAACA,GACf,OACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAMC,QAASH,EAAMI,QAArB,qBACA,uBAAIJ,EAAMK,SACV,iCAASL,EAAMM,WACf,0BAAON,EAAMO,W,4DCRnB,EAA8B,iCCgB9B,EAZoB,WAClB,OACE,iBAAKN,UAAWC,EAAhB,WACE,SAAC,IAAD,CAAiBM,KAAMC,EAAAA,GAAOC,KAAK,SACnC,8CACA,wCACa,SAAC,KAAD,CAAMC,GAAG,IAAT,2BCHbC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAOc,OAPdA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAOJC,gBAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAkB,WAAOC,EAAKC,EAAOC,GAAnB,iFACK,EAAKhB,MAAMiB,UAAUH,EAAKC,GAD/B,OAEQ,MAFR,OAEHG,QACX,EAAKlB,MAAMmB,SAAS,EAAKnB,MAAMe,MAAO,EAAKf,MAAMoB,OAAQJ,GAH3C,kGAAlBH,GAAkB,EAsCjB,OAtCiB,yCANlB,WACMQ,KAAKrB,MAAMsB,MACbD,KAAKrB,MAAMmB,SAASE,KAAKrB,MAAMe,MAAOM,KAAKrB,MAAMoB,UAEpD,oBASD,WAAU,IAAD,OACHG,GAAY,SAACC,EAAD,IA6BhB,OA5BIH,KAAKrB,MAAMsB,MAAQD,KAAKrB,MAAMyB,IAAIC,OAAS,IAC7CH,GACE,gBAAKtB,UAAWC,EAAhB,SACGmB,KAAKrB,MAAMyB,IAAIE,KAAI,SAACC,GACnB,OACE,SAACC,EAAD,CACEtB,KAAMqB,EAAIE,aACVzB,MAAOuB,EAAIvB,MACXC,OAAQsB,EAAItB,OAEZF,QAAS,kBACP,EAAKS,gBAAgBe,EAAId,IAAK,EAAKd,MAAMe,OAAO,KAF7Ca,EAAIG,eAWjBV,KAAKrB,MAAMgC,UACbT,GACE,gBAAKtB,UAAWC,EAAhB,UACE,SAAC+B,EAAA,EAAD,QAKC,gBAAKhC,UAAWC,EAAhB,SAAoCqB,QAC5C,EA7CGX,CAAkBsB,EAAAA,WA8DxB,GAAeC,EAAAA,EAAAA,KAdS,SAACC,GAAD,MAAY,CAClCrB,MAAOqB,EAAMd,KAAKP,MAClBK,OAAQgB,EAAMd,KAAKF,OACnBE,KAA2B,OAArBc,EAAMd,KAAKP,MACjBU,IAAKW,EAAMb,UAAUA,UACrBS,QAASI,EAAMb,UAAUS,YAGA,SAACK,GAAD,MAAe,CACxClB,SAAU,SAACJ,EAAOK,EAAQJ,GAAhB,OACRqB,EAASC,EAAAA,GAAuBvB,EAAOK,EAAQJ,KACjDC,UAAW,SAACH,EAAKC,GAAN,OAAgBsB,EAASC,EAAAA,GAAuBxB,EAAKC,QAGlE,CAA4DH","sources":["webpack://quotes/./src/container/Favorites/Favorites.module.css?803d","webpack://quotes/./src/components/UI/FavCard/FavCard.module.css?c24d","components/UI/FavCard/FavCard.js","webpack://quotes/./src/components/UI/NoFavorites/NoFavorites.module.css?3c8b","components/UI/NoFavorites/NoFavorites.js","container/Favorites/Favorites.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Favorites\":\"Favorites_Favorites__uU84J\",\"Container\":\"Favorites_Container__LP0Dk\",\"Center\":\"Favorites_Center__yQtzh\"};","// extracted by mini-css-extract-plugin\nexport default {\"FavCard\":\"FavCard_FavCard__5ytzD\"};","import React from \"react\";\r\nimport classes from \"./FavCard.module.css\";\r\n\r\nconst favCard = (props) => {\r\n  return (\r\n    <div className={classes.FavCard}>\r\n      <span onClick={props.clicked}>&#10006;</span>\r\n      <p>{props.quote}</p>\r\n      <span>- {props.author}</span>\r\n      <span>{props.date}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default favCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"NoFavorites\":\"NoFavorites_NoFavorites__M7IBf\"};","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMeh } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./NoFavorites.module.css\";\r\nconst noFavorites = () => {\r\n  return (\r\n    <div className={classes.NoFavorites}>\r\n      <FontAwesomeIcon icon={faMeh} size=\"10x\" />\r\n      <h2>No Favorites Yet</h2>\r\n      <p>\r\n        Go back to <Link to=\"/\">Quotes</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default noFavorites;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Favorites.module.css\";\r\nimport FavCard from \"../../components/UI/FavCard/FavCard\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport NoFavorites from \"../../components/UI/NoFavorites/NoFavorites\";\r\n\r\nclass Favorites extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth) {\r\n      this.props.fetchFav(this.props.token, this.props.userId);\r\n    }\r\n  }\r\n\r\n  onDeleteHandler = async (key, token, fromDelete) => {\r\n    let response = await this.props.deleteFav(key, token);\r\n    if (response.status === 200) {\r\n      this.props.fetchFav(this.props.token, this.props.userId, fromDelete);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let favorites = <NoFavorites />;\r\n    if (this.props.auth && this.props.fav.length > 0) {\r\n      favorites = (\r\n        <div className={classes.Container}>\r\n          {this.props.fav.map((res) => {\r\n            return (\r\n              <FavCard\r\n                date={res.dateModified}\r\n                quote={res.quote}\r\n                author={res.author}\r\n                key={res.quoteId}\r\n                clicked={() =>\r\n                  this.onDeleteHandler(res.key, this.props.token, true)\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.props.loading) {\r\n      favorites = (\r\n        <div className={classes.Center}>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className={classes.Favorites}>{favorites}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state.auth.token,\r\n  userId: state.auth.userId,\r\n  auth: state.auth.token !== null,\r\n  fav: state.favorites.favorites,\r\n  loading: state.favorites.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchFav: (token, userId, fromDelete) =>\r\n    dispatch(actions.fetchFavorites(token, userId, fromDelete)),\r\n  deleteFav: (key, token) => dispatch(actions.deleteFavorite(key, token)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\r\n"],"names":["props","className","classes","onClick","clicked","quote","author","date","icon","faMeh","size","to","Favorites","onDeleteHandler","key","token","fromDelete","deleteFav","status","fetchFav","userId","this","auth","favorites","NoFavorites","fav","length","map","res","FavCard","dateModified","quoteId","loading","Spinner","Component","connect","state","dispatch","actions"],"sourceRoot":""}